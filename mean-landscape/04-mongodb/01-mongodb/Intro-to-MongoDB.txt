
using git-bash

1 - Create a database called 'my_first_db'.

use my_first_db

2 - Create "students" collection.

db.createCollection('students')
show collections

3 - Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

db.students.insert({})

4 - Create 5 students with the appropriate info.

db.students.insert({name: "Marco", home_state: "Virginia", lucky_number: 7, birthday: {month: 02, day: 27, year: 1988}}                      )

db.students.insert({name: "Sophia", home_state: "Maryland", lucky_number: 9, birthday: {month: 09, day: 24, year: 1987}})

db.students.insert({name: "DJ", home_state: "Washington DC", lucky_number: 11, birthday: {month: 10, day: 31, year: 1985}})

db.students.insert({name: "Duke", home_state: "Virginia", lucky_number: 0, birthday: {month: 01, day: 01, year: 2002}})

db.students.insert({name: "Lip", home_state: "California", lucky_number: 3, birthday: {month: 02, day: 12, year: 1999}})



5 - Get all students.

db.students.find().pretty()

6 - Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).

db.students.find({home_state: "Virginia"}).pretty()

7 - Get all students whose lucky number is:

7.1 - greater than 3 : db.students.find({lucky_number: {$gt: 3}}).pretty()

7.2 - less than or equal to 10 : db.students.find({lucky_number: {$lte: 10}}).pretty()

7.3 - between 1 and 9 (inclusive) : db.students.find({lucky_number: {$gt: 1, $lt: 9}}).pretty()


8 - Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.

db.students.update({name: "Marco"}, {$set: {interesting: ["coding", "brunch", "mongoDB"]}})

db.students.update({name: "Sophia"}, {$set: {interesting: ["cooking", "dog walking", "movies"]}})

db.students.update({name: "DJ"}, {$set: {interesting: ["game", "studying", "food"]}})

db.students.update({name: "Duke"}, {$set: {interesting: ["food", "eat", "delicious food"]}})

db.students.update({name: "Lip"}, {$set: {interesting: ["nap", "sleep", "laying down"]}})


9 - Add some unique interests for each particular student into each of their interest arrays.

db.students.update({name: "Marco"}, {$push: {interesting: "coding dojo"}})

10 - Add the interest 'taxes' into someone's interest array.

db.students.update({name: "Marco"}, {$push: {interesting: "taxes"}})

11 - Remove the 'taxes' interest you just added.

db.students.update({name: "Marco"}, {$pull: {interesting: "taxes"}})
or
db.students.update({name: "Marco"}, {$pop: {interesting: 1}})

12 - Remove all students who are from California (or Washington).

db.students.remove({home_state: "Virginia"})

13 - Remove a student by name. 

db.students.remove({name: "Sophia"})

14 - Remove a student whose lucky number is greater than 5 (JUST ONE)

db.students.remove({lucky_number: {$gt: 5}})

15 - Add a field to each student collection called 'number_of_belts' and set it to 0.

db.students.update({name: "Marco"}, {$set: {number_of_belts: 0}})

db.students.update({name: "Sophia"}, {$set: {number_of_belts: 0}})

db.students.update({name: "DJ"}, {$set: {number_of_belts: 0}})

db.students.update({name: "Duke"}, {$set: {number_of_belts: 0}})

db.students.update({name: "Lip"}, {$set: {number_of_belts: 0}})

16 - Increment this field by 1 for all students in Washington (Seattle Dojo).

db.students.update({home_state: "Virginia"}, {$set: {number_of_belts: 1}})
or
db.students.update({home_state: "Virginia"}, {$inc: {number_of_belts: 1}})

17 - Rename the 'number_of_belts' field to 'belts_earned'

db.students.updateMany({}, {$rename: {"number_of_belts": "belts_earned"}})

18 - Remove the 'lucky_number' field.

db.students.updateMany({}, {$unset: {lucky_number: 1}}, false, true)

19 - Add a 'updated_on' field, and set the value as the current date.

db.students.updateMany({}, {$currentDate: {updated_on: true}})
